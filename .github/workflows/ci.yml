name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./evently-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.12.1'
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: Build backend
        run: pnpm build
  
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./evently-frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.12.1'
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Run Jest Tests
        run: npm run test:ci
        env:
          CI: true
          NODE_ENV: test
          NEXT_PUBLIC_API_BASE_URL: http://localhost:3001/api
      
      - name: Test Results Summary
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ All tests passed! Ready for deployment."
          else
            echo "❌ Tests failed! Deployment will be blocked."
            exit 1
          fi
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./evently-frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
      
      - name: Build frontend
        run: pnpm build
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:3001/api
