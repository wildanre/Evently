name: Deploy Frontend

on:
  push:
    branches: [main, master]
    paths:
      - 'evently-frontend/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'evently-frontend/**'
  workflow_dispatch:

# Add permissions needed for GitHub API operations
permissions:
  contents: read
  pull-requests: write
  issues: write
  actions: read
  checks: read
  deployments: write
  statuses: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./evently-frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: evently-frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Create test environment file
        run: |
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.test.local
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.test.local
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.test.local
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.test.local
          echo "NEXT_PUBLIC_API_URL=https://evently-backend-amber.vercel.app" >> .env.test.local
          echo "NEXT_PUBLIC_API_BASE_URL=https://evently-backend-amber.vercel.app" >> .env.test.local
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env.test.local

      - name: Run type checking
        run: pnpm exec tsc --noEmit

      - name: Run unit tests
        run: pnpm run test:ci

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: evently-frontend/pnpm-lock.yaml
      
      - name: Create environment file
        working-directory: ./evently-frontend
        run: |
          echo "NEXT_PUBLIC_API_URL=https://evently-backend-amber.vercel.app" >> .env
          echo "NEXT_PUBLIC_API_BASE_URL=https://evently-backend-amber.vercel.app" >> .env
          echo "NEXTAUTH_URL=https://evently-nine-iota.vercel.app" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
      
      # Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        id: vercel-deployment
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-project-name: evently
          working-directory: ./evently-frontend
          vercel-args: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && '--prod --confirm' || '--confirm' }}
          scope: team_hsodXjGi5ndO7HPhfmEtYOfF
          
      - name: Debug deployment outputs
        run: |
          echo "Preview URL: ${{ steps.vercel-deployment.outputs.preview-url }}"
          echo "Deployment URL: ${{ steps.vercel-deployment.outputs.preview-name }}"
          echo "Event type: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          
      - name: Add comment to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          VERCEL_URL: ${{ steps.vercel-deployment.outputs.preview-url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            const deployUrl = process.env.VERCEL_URL;
            
            console.log('Deploy URL:', deployUrl);
            console.log('Issue number:', issue_number);
            console.log('Owner:', owner);
            console.log('Repo:', repo);
            
            if (deployUrl) {
              try {
                await github.rest.issues.createComment({
                  issue_number,
                  owner,
                  repo,
                  body: `üöÄ Deploy Preview berhasil!\n\n‚úÖ Preview URL: ${deployUrl}\n\nüì± Tested on mobile and desktop devices`
                });
                console.log('Comment added successfully');
              } catch (error) {
                console.error('Error adding comment:', error);
                // Don't fail the workflow if comment fails
              }
            } else {
              console.log('No deploy URL available');
            }

      - name: Deployment success notification
        if: success()
        run: |
          echo "‚úÖ Deployment berhasil!"
          echo "Production URL: https://evently-frontend-wildanus-projects-c54861c9.vercel.app"
          if [ "${{ steps.vercel-deployment.outputs.preview-url }}" != "" ]; then
            echo "Preview URL: ${{ steps.vercel-deployment.outputs.preview-url }}"
          fi

      - name: Handle deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment gagal!"
          echo "Silakan periksa log di atas untuk detail error"
          exit 1
